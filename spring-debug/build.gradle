description = "spring-debug"

apply plugin: "kotlin"

dependencies {
    optional(project(":spring-context"))
}

// Prevent xml-apis from being used so that the corresponding XML APIs from
// the JDK's `java.xml` module are used instead. This allows spring-test to
// build in Eclipse IDE which fails to compile if there is a split package
// between a JDK system module and the unnamed module (for JARs on the
// classpath).
configurations.optional {
    exclude group: "xml-apis", module: "xml-apis"
}


test {
    description = "Runs JUnit 4, JUnit Jupiter, and TestNG tests."
    useJUnitPlatform {
        includeEngines "junit-vintage", "junit-jupiter", "testng"
        excludeTags "failing-test-case"
    }
    // We use `include` instead of `filter.includeTestsMatching`, since
    // the latter results in some tests being executed/reported
    // multiple times.
    include(["**/*Tests.class", "**/*Test.class"])
    filter.excludeTestsMatching("*TestCase")
    systemProperty("testGroups", project.properties.get("testGroups"))
    // Java Util Logging for the JUnit Platform.
    // systemProperty("java.util.logging.manager", "org.apache.logging.log4j.jul.LogManager")
}
